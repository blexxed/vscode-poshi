{
    //basic
    //common
    "command": {
        "prefix": "comd",
        "body": [
            "<command name=\"$1\">",
            "\t$0",
            "</command>"
        ],
        "description": "Creates a command code block"
    },
    "execute": {
        "prefix": "ex",
        "body": [
            "<execute ${1:type}=\"$2\" />$0"
        ],
        "description": "Creates a execute code block with no parameter" 
    },
    "executeWithLocator": {
        "prefix": "exl",
        "body": [
            "<execute ${1:type}=\"${$2}\" locator1=\"$3\" />$0"
        ],
        "description": "Creates a execute code block only with locator1 parameter"
    },
    "executeWithValue": {
        "prefix": "exv",
        "body": [
            "<execute ${1:type}=\"${$2}\" value1=\"$3\" />$0"
        ],
        "description": "Creates a execute code block only with value1 parameter"
    },
    "executeWithLocatorAndValue": {
        "prefix": "exa",
        "body": [
            "<execute ${1:type}=\"${$2}\" locator1=\"$3\" value1=\"$4\" />$0"
        ],
        "description": "Creates a execute code block with locator1 and value1 parameters"
    },
    "var": {
        "prefix": "var",
        "body": [
            "<var name=\"$1\" value=\"$2\" />$0"
        ],
        "description": "Creates a var declaration code block"
    },
    //function
    "defineFunction": {
        "prefix": "df",
        "body": [
            "<definition default=\"${1:defaultCommand}\">",
            "\t<command name=\"$2}\">",
            "\t\t$0",
            "\t</command>",
            "</definition>"
        ],
        "description": "Creates a definition code block for Function"
    },
    "executeSelenium": {
        "prefix": "exs",
        "body": [
            "<execute selenium=\"${1:seleniumName}\" />$0"
        ],
        "description": "execute Selenium Command"
    },
    //macro
    "defineMacro": {
        "prefix": "dm",
        "body": [
            "<definition>",
            "\t<command name=\"$1\">",
            "\t\t$0",
            "\t</command>",
            "</definition>"
        ],
        "description": "Creates a definition code block for Macro"
    },
    "executeFunction": {
        "prefix": "exf",
        "body": [
            "<execute function=\"$1\" />$0"
        ],
        "description": "execute Function Command"
    },
    "executeFunctionWithLocator": {
        "prefix": "exfl",
        "body": [
            "<execute function=\"$1\" locator1=\"$2\" />$0"
        ],
        "description": "execute Function Command only with locator1 parameter"
    },
    "executeFunctionWithValue": {
        "prefix": "exfv",
        "body": [
            "<execute function=\"$1\" value1=\"$2\" />$0"
        ],
        "description": "execute Function Command only with value1 parameter"
    },
    "executeFunctionWithLocatorAndValue": {
        "prefix": "exfa",
        "body": [
            "<execute function=\"$1\" locator1=\"$2\" value1=\"$3\" />$0"
        ],
        "description": "execute Function Command with locator1 and value1 parameters"
    },
    //testcase
    "defineTestcase": {
        "prefix": "dt",
        "body": [
            "<definition component-name=\"${1:componentName}\">",
            "\t<set-up>",
            "\t\t$2",
            "\t</set-up>\n",
            "\t<tear-down>",
            "\t\t$3",
            "\t</tear-down>\n\t$0",
            "</definition>"
        ],
        "description": "Creates a definition code block for Testcase"
    },
    "property": {
        "prefix": "prop",
        "body": [
            "<property name=\"${1:propName}\" value=\"${2:propValue}\" />$0"
        ],
        "description": "Creates a property declaration code block"
    },
    "executeMacro": {
        "prefix": "exm",
        "body": [
            "<execute macro=\"$1\" />$0"
        ],
        "description": "execute Macro Command"
    },
    //path
    "definePath": {
        "prefix": "dp",
        "body": [
            "<tr>",
            "\t<td>${1:locatorKey}</td>",
            "\t<td>${2:locatorValue}</td>",
            "\t<td></td>",
            "</tr>\n$0"
        ],
        "description": "Creates a definition code block for Path Locator"
    },
    "defineEmptyPath": {
        "prefix": "dep",
        //it's same as 'tr>td*3'
        "body": [
            "<tr>",
            "\t<td></td>",
            "\t<td></td>",
            "\t<td></td>",
            "</tr>"
        ],
        "description": "Creates a definition code block for empty Path Locator"
    },
    //advance
    "equlas": {
        "prefix": "eq",
        "body": [
            "<equals arg1=\"${1:arg1}\" arg2=\"${2:arg2}\" />$0"
        ],
        "description": "Creates 'equals' condition code segment"
    },
    "condition": {
        "prefix": "cond",
        "body": [
            "<condition function=\"$1\" locator1=\"$2\" value1=\"$3\" />$0"
        ],
        "description": "Creates 'condition' condition code segment"
    },
    "ifThen": {
        "prefix": "ifth",
        "body": [
            "<if>",
            "\t${1:conditionSegment}",
            "\t<then>\n\t\t$2",
            "\t</then>",
            "</if>\n$0"
        ],
        "description": "Creates 'if-then' condition code segment"
    },
    "ifThenElse": {
        "prefix": "ifthel",
        "body": [
            "<if>",
            "\t${1:conditionSegment}",
            "\t<then>\n\t\t$2",
            "\t</then>",
            "\t<else>\n\t\t$3",
            "\t</else>",
            "</if>\n$0"
        ],
        "description": "Creates 'if-then-else' condition code segment"
    },
    "ifThenElseIf": {
        "prefix": "iftheif",
        "body": [
            "<if>",
            "\t${1:conditionSegment1}",
            "\t<then>\n\t\t$2",
            "\t</then>",
            "\t<elseif>",
            "\t\t${3:conditionSegment2}",
            "\t\t<then>\n\t\t\t$4",
            "\t\t</then>",
            "\t</elseif>",
            "</if>\n$0"
        ],
        "description": "Creates 'if-then-elseif' condition code segment"
    },
    "elseIf": {
        "prefix": "eif",
        "body": [
            "<elseif>",
            "\t${1:conditionSegment}",
            "\t<then>\n\t\t$2",
            "\t</then>",
            "</elseif>\n$0"
        ],
        "description": "Creates 'else-if' condition code segment"
    },
    "else": {
        "prefix": "el",
        "body": [
            "<else>",
            "\t$1",
            "</else>\n$0"
        ],
        "description": "Creates 'else' condition code segment"
    },
    "whileThen": {
        "prefix": "whth",
        "body": [
            "<while>",
            "\t${1:conditionSegment}",
            "\t<then>\n\t\t$2",
            "\t</then>",
            "</while>\n$0"
        ],
        "description": "Creates 'while-then' loop code segment"
    },
    "for": {
        "prefix": "for",
        "body": [
            "<for list=\"${1:listName}\" param=\"${2:paramName}\" >",
            "\t$3",
            "</for>\n$0"
        ],
        "description": "Create 'for' loop code segment"
    }
}